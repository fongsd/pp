%{

#include <iostream>
#include <cstdlib>
#include <string>
#include <map>

using namespace std;

#include "polinom.hpp"

extern int yylex();

void yyerror(string s) {

	cerr<<"Sintaksna greska: "<<s<<endl;
	exit(EXIT_FAILURE);
}

map<string, Polinom*> promenljive;

void obrisi(void){
	
	for (auto it = promenljive.begin(); it != promenljive.end(); it++)
		delete it->second;
}

%}

%union{
 double x;
 string* ime;
 Polinom* p;
}

%left EQ NEQ
%left '+' '-'
%left '*'
%right '\''
%right UMINUS

%token<ime> ID 
%token<x> BROJ 
%token EQ NEQ DODELA

%type<p> izraz polinom lista

%start program

%%

program: naredba '\n' program	{ }
	|							{ } 
	;
naredba: izraz					{	cout<<*$1<<endl; delete $1;}
	| ID DODELA izraz			{	
									auto it = promenljive.find(*$1);
									
									if (it != promenljive.end())
										delete it->second;
									
									promenljive[*$1] = $3;
								}
	| izraz EQ izraz			{	
									if (*$1 == *$3)
										cout<<"True"<<endl;
									else
										cout<<"False"<<endl;
								}
	| izraz NEQ izraz			{	
									if (*$1 != *$3)
										cout<<"True"<<endl;
									else
										cout<<"False"<<endl;
								}
	| izraz '[' BROJ ']'		{	cout<<($1->valueAt($3))<<endl; delete $1; }
	;
izraz: izraz '+' izraz			{	$$ = *$1 + *$3; delete $1; delete $3; }
	| izraz '-'	izraz			{	$$ = *$1 - *$3; delete $1; delete $3; }
	| izraz '*'	izraz			{	$$ = *$1 * *$3; delete $1; delete $3; }
	| '-' izraz	%prec UMINUS	{	$$ = -*$2; delete $2; }
	| '(' izraz ')'				{	$$ = $2; }
	| izraz '\''				{	$$ = $1->izvod(); delete $1;}
	| '$' izraz '|' BROJ		{	$$ = $2->integral($4); delete $2; }
	| ID						{	
									auto it = promenljive.find(*$1);
									
									if (it == promenljive.end())
										yyerror("Ne postoji promenljiva");
										
									$$ = new Polinom(*(it->second));
									
									delete $1;
								}
	| polinom					{	$$ = $1; }
	;
polinom: '<' lista '>'			{	
									$$ = $2;
								}
	;
lista: lista ',' BROJ			{	
									$$ = $1;
									$$->insert($3);
								}
	| BROJ						{	
									$$ = new Polinom();
									$$->insert($1);
								}
	;
%%

int main(){
	
	if (yyparse() != 0)
		yyerror("Previse tokena na ulazu");
		
	cout<<"Sve ok"<<endl;
	
	exit(EXIT_SUCCESS);
}
